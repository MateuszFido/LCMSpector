# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Tests

on:
  push:
    branches: [ "ms2-integration", "main" ]
  pull_request:
    branches: [ "ms2-integration", "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies (macOS)
      run: |
          pip install pytest flake8
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
      shell: bash
      if: matrix.os == 'macOS-latest'

    - name: Install dependencies (Ubuntu)
      run: |
        pip install pytest flake8
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
        sudo apt update
        sudo apt install libgl1 libegl1 -y
      shell: bash
      if: matrix.os == 'ubuntu-latest'

    - name: Install dependencies (Windows)
      run: |
        set PYTHONUTF8=1
        pip install pytest flake8
        if exist requirements.txt (
          pip install -r requirements.txt
        )
      shell: cmd
      if: matrix.os == 'windows-latest'
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -s
