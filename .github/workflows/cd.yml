name: Build and Release Executables

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Enter the version (e.g., v1.0.0)"
        required: true

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          
      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: Build executable (macOS)
        run: |
         cd lc-inspector/ 
         pyinstaller --name "LC-Inspector" --icon icon.icns --exclude-module torch --exclude-module matplotlib --exclude-module frozendict --exclude-module torchvision --exclude-module torchgen --exclude-module tqdm --exclude-module torchaudio --add-data "ui/logo.png:ui" --add-data "config.json:." --add-data "app.log:." --add-data "resources/MoNA-export-All_LC-MS-MS_Orbitrap.msp:resources" --onedir --windowed main.py
        shell: bash
        if: matrix.os == 'macos-latest'

      - name: Build executable (Windows)
        run:  |
         cd lc-inspector/
         pip install pillow
         pyinstaller --name "LC-Inspector" --icon icon.icns --exclude-module torch --exclude-module matplotlib --exclude-module frozendict --exclude-module torchvision --exclude-module torchgen --exclude-module tqdm --exclude-module torchaudio --add-data "ui/logo.png:ui" --add-data "config.json:." --add-data "app.log:." --add-data "resources/MoNA-export-All_LC-MS-MS_Orbitrap.msp:resources" --noconsole --onedir main.py
        shell: cmd
        if: matrix.os == 'windows-latest'

      - name: Zip artifact for deployment (Windows)
        run: tar.exe -acvf LC-Inspector-${{ github.event.inputs.version }}-Win11-x86_64.zip lc-inspector/dist/LC-Inspector
        shell: cmd
        if: matrix.os == 'windows-latest'

      - name: Zip artifact for deployment (macOS)
        run: zip -r LC-Inspector-${{ github.event.inputs.version }}-macOS-arm64.zip lc-inspector/dist/LC-Inspector.app
        shell: bash
        if: matrix.os == 'macos-latest'

      - name: Upload artifact (macOS)
        uses: actions/upload-artifact@v4
        with:
          name: LC-Inspector-${{ github.event.inputs.version }}-macOS-arm64.zip
          path: ./*.zip
        if: matrix.os == 'macos-latest'
        
      - name: Upload arifact (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: LC-Inspector-${{ github.event.inputs.version }}-Win11-x86_64.zip
          path: ./*.zip 
        if: matrix.os == 'windows-latest'

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: List downloaded files (Debugging)
        run: ls -R

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          files: |
            LC-Inspector-${{ github.event.inputs.version }}-macOS-arm64.zip
            LC-Inspector-${{ github.event.inputs.version }}-Win11-x86_64.zip

